import{_ as w,C as $}from"./index-261e8fb3.js";import{_ as z}from"./dynamic-import-helper-be004503.js";import{_ as b,p as a,k as l,l as p,A as n,L as o,u as r,x as B,q as c,a0 as E,y as T,a1 as P,z as W}from"./vendor-2e22dd5c.js";import"./vendor-fortawesome-349077b4.js";import"./vendor-bootstrap-fb84b040.js";import"./vendor-jquery-6db16bd2.js";import"./vendor-axios-f64a0ef5.js";import"./vendor-sortablejs-c63121b5.js";const q={name:"ElectricityTariffConfigFallback",emits:["update:configuration"],props:{configuration:{type:Object,required:!0},electricityTariffType:String},methods:{updateConfiguration(e,t=void 0){this.$emit("update:configuration",{value:e,object:t})}}},V={class:"backup-cloud-fallback"};function L(e,t,s,_,h,u){const d=a("openwb-base-alert"),f=a("openwb-base-textarea");return l(),p("div",V,[n(d,{subtype:"warning"},{default:o(()=>[r(' Es wurde keine Konfigurationsseite für den Anbieter "'+B(s.electricityTariffType)+'" gefunden. Die Einstellungen können als JSON direkt bearbeitet werden. ',1)]),_:1}),n(f,{title:"Konfiguration",subtype:"json","model-value":s.configuration,"onUpdate:modelValue":t[0]||(t[0]=g=>u.updateConfiguration(g,"configuration"))},{help:o(()=>[r(" Bitte prüfen Sie, ob die Eingaben richtig interpretiert werden. ")]),_:1},8,["model-value"]),n(d,{subtype:"info"},{default:o(()=>[c("pre",null,B(JSON.stringify(s.configuration,void 0,2)),1)]),_:1})])}const A=b(q,[["render",L],["__file","/opt/openWB-dev/openwb-ui-settings/src/components/electricity_tariffs/OpenwbElectricityTariffConfigFallback.vue"]]),O={name:"OpenwbElectricityTariffProxy",emits:["update:configuration"],props:{electricityTariffType:{type:String,required:!0},configuration:{type:Object,required:!0}},computed:{myComponent(){return console.debug(`loading electricity tariff cloud: ${this.electricityTariffType}`),E({loader:()=>z(Object.assign({"./awattar/electricity_tariff.vue":()=>w(()=>import("./electricity_tariff-ba47197b.js"),["assets/electricity_tariff-ba47197b.js","assets/vendor-2e22dd5c.js","assets/vendor-sortablejs-c63121b5.js","assets/vendor-941e092d.css"]),"./tibber/electricity_tariff.vue":()=>w(()=>import("./electricity_tariff-2ccf70e9.js"),["assets/electricity_tariff-2ccf70e9.js","assets/vendor-2e22dd5c.js","assets/vendor-sortablejs-c63121b5.js","assets/vendor-941e092d.css"])}),`./${this.electricityTariffType}/electricity_tariff.vue`),errorComponent:A})}},methods:{updateConfiguration(e){this.$emit("update:configuration",e)}}};function N(e,t,s,_,h,u){return l(),T(P(u.myComponent),{configuration:s.configuration,electricityTariffType:s.electricityTariffType,"onUpdate:configuration":t[0]||(t[0]=d=>u.updateConfiguration(d))},null,40,["configuration","electricityTariffType"])}const D=b(O,[["render",N],["__file","/opt/openWB-dev/openwb-ui-settings/src/components/electricity_tariffs/OpenwbElectricityTariffProxy.vue"]]),U={name:"OpenwbGeneralChargeConfig",mixins:[$],components:{OpenwbElectricityTariffProxy:D},data(){return{mqttTopicsToSubscribe:["openWB/general/extern","openWB/general/chargemode_config/unbalanced_load","openWB/general/chargemode_config/unbalanced_load_limit","openWB/general/prices/bat","openWB/general/prices/grid","openWB/general/prices/pv","openWB/optional/et/provider","openWB/system/configurable/electricity_tariffs"]}},computed:{electricityTariffList(){return this.$store.state.mqtt["openWB/system/configurable/electricity_tariffs"]}},methods:{getElectricityTariffDefaultConfiguration(e){const t=this.electricityTariffList.find(s=>s.value==e);return Object.prototype.hasOwnProperty.call(t,"defaults")?{...t.defaults}:(console.warn("no default configuration found for electricity tariff type!",e),{})},updateSelectedElectricityTariff(e){this.updateState("openWB/optional/et/provider",e,"type"),this.updateState("openWB/optional/et/provider",this.getElectricityTariffDefaultConfiguration(e))},updateConfiguration(e,t){console.debug("updateConfiguration",e,t),this.updateState(e,t.value,t.object)}}},F={class:"generalChargeConfig"},Z={name:"generalChargeConfigForm"},j={key:0},I={key:1},R=c("br",null,null,-1),G=c("hr",null,null,-1),K=c("br",null,null,-1),H={key:0},J={key:1},x=c("br",null,null,-1),M={key:0};function Q(e,t,s,_,h,u){const d=a("openwb-base-alert"),f=a("openwb-base-button-group-input"),g=a("openwb-base-range-input"),y=a("openwb-base-heading"),m=a("openwb-base-number-input"),v=a("openwb-base-card"),S=a("openwb-base-select-input"),k=a("openwb-electricity-tariff-proxy"),C=a("openwb-base-submit-buttons");return l(),p("div",F,[c("form",Z,[n(v,{title:"Allgemein"},{default:o(()=>[e.$store.state.mqtt["openWB/general/extern"]===!0?(l(),p("div",j,[n(d,{subtype:"info"},{default:o(()=>[r(' Diese Einstellungen sind nicht verfügbar, solange sich diese openWB im Steuerungsmodus "secondary" befindet. ')]),_:1})])):(l(),p("div",I,[n(f,{title:"Begrenzung der Schieflast",buttons:[{buttonValue:!1,text:"Nein",class:"btn-outline-danger"},{buttonValue:!0,text:"Ja",class:"btn-outline-success"}],"model-value":e.$store.state.mqtt["openWB/general/chargemode_config/unbalanced_load"],"onUpdate:modelValue":t[0]||(t[0]=i=>e.updateState("openWB/general/chargemode_config/unbalanced_load",i))},{help:o(()=>[r(" Wenn diese Option aktiviert ist, werden nicht-dreiphasige Ladevorgänge so geregelt, dass am Netzanschlusspunkt (EVU-Zähler) die eingestellte Grenze für die Schieflast nicht überschritten wird. Hierfür muss der EVU-Zähler einzelne Phasenströme bereitstellen!"),R,r(' Weiterhin müssen bei den Ladepunkten sowie Fahrzeugen sämtliche Angaben zur Anzahl angeschlossener/unterstützter Phasen und der Phasenrotation hinterlegt werden, damit der Regelung bekannt ist, welcher Ladevorgang welche Phase am Netzanschluss beeinflusst. siehe "Konfiguration - Ladepunkte -> elektrischer Anschluss - Phase 1" und "Konfiguration - Fahrzeuge -> Fahrzeug-Profile" ')]),_:1},8,["model-value"]),e.$store.state.mqtt["openWB/general/chargemode_config/unbalanced_load"]?(l(),T(g,{key:0,title:"Erlaubte Schieflast",min:10,max:32,step:1,unit:"A","model-value":e.$store.state.mqtt["openWB/general/chargemode_config/unbalanced_load_limit"],"onUpdate:modelValue":t[1]||(t[1]=i=>e.updateState("openWB/general/chargemode_config/unbalanced_load_limit",i))},{help:o(()=>[r("Hiermit wird festgelegt, welche Schieflast am Netzanschlusspunkt erlaubt ist. Bei Überschreitung werden gezielt einzelne Ladevorgänge in der Leistung begrenzt.")]),_:1},8,["model-value"])):W("",!0),G,n(y,null,{help:o(()=>[r(" Zur Berechnung der Ladekosten im Lade-Log werden stundenweise die Anteile der Stromquellen (Speicher, Netz, PV) berechnet und mit den hier angegebenen Preisen multipliziert."),K,r(" Ist die Abrechnung über das Ladelog, z.B. mit dem Arbeitgeber, vereinbart, ist bei allen drei Feldern der vereinbarte Preis einzutragen. ")]),default:o(()=>[r(" Berechnung der Ladekosten ")]),_:1}),n(m,{title:"Preis für Netzbezug",min:0,step:1e-5,unit:"ct/kWh","model-value":e.$store.state.mqtt["openWB/general/prices/grid"]*1e5,"onUpdate:modelValue":t[2]||(t[2]=i=>e.updateState("openWB/general/prices/grid",i/1e5))},{help:o(()=>[r(" Ist ein Anbieter für strompreisbasiertes Laden konfiguriert, wird statt des hier angegebenen Netzpreises der dynamische Strompreis des Anbieters verwendet (stündliche Aktualisierung durch den Anbieter). ")]),_:1},8,["model-value"]),n(m,{title:"Preis für Speicherentladung",min:0,step:1e-5,unit:"ct/kWh","model-value":e.$store.state.mqtt["openWB/general/prices/bat"]*1e5,"onUpdate:modelValue":t[3]||(t[3]=i=>e.updateState("openWB/general/prices/bat",i/1e5))},null,8,["model-value"]),n(m,{title:"Preis für PV-Strom",min:0,step:1e-5,unit:"ct/kWh","model-value":e.$store.state.mqtt["openWB/general/prices/pv"]*1e5,"onUpdate:modelValue":t[4]||(t[4]=i=>e.updateState("openWB/general/prices/pv",i/1e5))},null,8,["model-value"])]))]),_:1}),n(v,{title:"Optional"},{default:o(()=>[e.$store.state.mqtt["openWB/general/extern"]===!0?(l(),p("div",H,[n(d,{subtype:"info"},{default:o(()=>[r(' Diese Einstellungen sind nicht verfügbar, solange sich diese openWB im Steuerungsmodus "secondary" befindet. ')]),_:1})])):(l(),p("div",J,[n(y,null,{default:o(()=>[r(" Strompreisbasiertes Laden ")]),_:1}),n(d,{subtype:"info"},{default:o(()=>[r(" Bei Sofort- und Zeitladen wird nur geladen, wenn der Strompreis unter dem maximalen angegeben Strompreis liegt. Für Zielladen wird die Ladedauer ermittelt und dann zu den günstigsten Stunden geladen."),x,r(" Wenn keine Preise abgefragt werden können, wird bei Sofort- und Zeitladen immer geladen und bei Zielladen zunächst mit PV-Überschuss und zum Erreichen des Zieltermins mit Netzstrom. ")]),_:1}),n(S,{class:"mb-2",title:"Anbieter",options:u.electricityTariffList,"model-value":e.$store.state.mqtt["openWB/optional/et/provider"]?e.$store.state.mqtt["openWB/optional/et/provider"].type:"","onUpdate:modelValue":t[5]||(t[5]=i=>u.updateSelectedElectricityTariff(i))},null,8,["options","model-value"]),e.$store.state.mqtt["openWB/optional/et/provider"]&&e.$store.state.mqtt["openWB/optional/et/provider"].type?(l(),p("div",M,[n(k,{electricityTariffType:e.$store.state.mqtt["openWB/optional/et/provider"].type,configuration:e.$store.state.mqtt["openWB/optional/et/provider"].configuration,"onUpdate:configuration":t[6]||(t[6]=i=>u.updateConfiguration("openWB/optional/et/provider",i))},null,8,["electricityTariffType","configuration"])])):W("",!0)]))]),_:1}),n(C,{formName:"generalChargeConfigForm",onSave:t[7]||(t[7]=i=>e.$emit("save")),onReset:t[8]||(t[8]=i=>e.$emit("reset")),onDefaults:t[9]||(t[9]=i=>e.$emit("defaults"))})])])}const ae=b(U,[["render",Q],["__file","/opt/openWB-dev/openwb-ui-settings/src/views/GeneralChargeConfig.vue"]]);export{ae as default};
